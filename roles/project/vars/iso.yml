---
builders:
  virtualbox_iso:
    disk_size: '{{ spec.disk_size }}'
    guest_additions_path: /tmp/VBoxGuestAdditions.iso
    headless: no
    http_directory: 'base/{{ spec.distribution }}'
    # This is the path to the directory where the resulting virtual machine will be created. This may be relative or absolute. 
    # If relative, the path is relative to the working directory when packer is executed.
    # This directory must not exist or be empty prior to running the builder
    output_directory: 'base/{{ spec.distribution }}/{{ spec.version }}/images'
    ssh_password:  '{{ spec.ssh_password }}'
    # ssh_port: 22
    ssh_username: '{{ spec.ssh_username }}'
    ssh_wait_timeout: 10000s
    type: virtualbox-iso
    vm_name: '{{ spec.vm_name }}'
    vboxmanage:
      - ["modifyvm", !unsafe "{{.Name}}", "--memory", "1024"]
      - ["modifyvm", !unsafe "{{.Name}}", "--cpus", "1"]

provisioners:
  # _order: [guest_additions, ansible]
  _order: []
  # NOTE: probably get rid of sudo provisioner as wheel is added by the preseed
  sudo:
    type: shell
    execute_command: !unsafe "echo '{{ spec.ssh_username }}' | {{ .Vars }} sudo -E -S sh '{{ .Path }}'"
    inline:
      - "echo '%wheel    ALL=(ALL)  NOPASSWD:ALL' >> /etc/sudoers"
  # NOTE: guest_additions is debian specific as it invokes m-a prepare
  guest_additions:
    type: shell
    inline:
      - "sleep 3"
      - "echo 'yes' | sudo m-a prepare"
      - "sudo mkdir /tmp/vboxguest"
      - "sudo mount -t iso9660 -o loop /tmp/VBoxGuestAdditions.iso /tmp/vboxguest"
      - "cd /tmp/vboxguest"
      - "sudo ./VBoxLinuxAdditions.run"
      - "cd /tmp"
      - "sudo umount /tmp/vboxguest"
      - "sudo rmdir /tmp/vboxguest"
      - "rm /tmp/VBoxGuestAdditions.iso"

post_processors:
  vagrant:
    type: vagrant
    keep_input_artifact: yes
    output: 'base/{{ spec.distribution }}/{{ spec.version }}/{{ spec.target }}.box'
